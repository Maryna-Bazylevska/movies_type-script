{"version":3,"file":"static/js/573.bb965ea0.chunk.js","mappings":"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","sources":["components/MovieInfo/MovieInfo.styled.ts","components/MovieInfo/MovieInfo.tsx","pages/MovieDetailsPage/MovieDetailsPage.tsx","services/moves-api.ts"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Button = styled.button`\r\n  width: 100px;\r\n  margin-bottom: 5px;\r\n`;\r\nexport const MovieInformation = styled.div`\r\n  padding-top: 10px;\r\n  display: flex;\r\n`;\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nexport const InfoWrapper = styled.div`\r\n  display: inline-block;\r\n  margin-left: 20px;\r\n`;","import { NavLink, useNavigate, useLocation } from \"react-router-dom\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport { IMovie } from \"../../interfaces/interfaces\";\r\nimport {\r\n  Button,\r\n  MovieInformation,\r\n  Wrapper,\r\n  InfoWrapper,\r\n} from \"./MovieInfo.styled\";\r\ntype MovieInfoProps = {\r\n  movie: IMovie;\r\n};\r\nconst MovieInfo = ({ movie }: MovieInfoProps) => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const year = movie.release_date.substring(0, 4);\r\n\r\n  return (\r\n    <>\r\n      <MovieInformation>\r\n        <Wrapper>\r\n          <Button\r\n            type=\"button\"\r\n            onClick={() => navigate(location?.state?.from ?? \"/\")}\r\n          >\r\n            Go back\r\n          </Button>\r\n          <img\r\n            src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\r\n            alt={movie.original_title}\r\n            width=\"250px\"\r\n          />\r\n        </Wrapper>\r\n        <InfoWrapper>\r\n          <h2>\r\n            {movie.original_title} ({year})\r\n          </h2>\r\n          <h3>Overview:</h3>\r\n          <p>{movie.overview}</p>\r\n          <h3>Genres</h3>\r\n          <ul>\r\n            {movie.genres.map(({ id, name }) => {\r\n              return <li key={id}>{name}</li>;\r\n            })}\r\n          </ul>\r\n        </InfoWrapper>\r\n      </MovieInformation>\r\n      <hr />\r\n      <div>\r\n        <h3>Additional information</h3>\r\n        <ul>\r\n          <li>\r\n            <NavLink to=\"cast\">Cast</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"reviews\">Reviews</NavLink>\r\n          </li>\r\n        </ul>\r\n        <hr />\r\n        <Outlet />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default MovieInfo;\r\n","import { useEffect, useState, Suspense } from \"react\";\r\nimport {\r\n  useParams,\r\n  NavLink,\r\n  useNavigate,\r\n  useLocation,\r\n  Outlet,\r\n} from \"react-router-dom\";\r\nimport { IMovie } from \"../../interfaces/interfaces\";\r\nimport { getMovieDetails } from \"../../services/moves-api\";\r\nimport MovieInfo from \"../../components/MovieInfo/MovieInfo\";\r\n\r\nconst MovieDetailsPage = () => {\r\n  const [movie, setMovie] = useState<IMovie>();\r\n  const { movieId } = useParams();\r\n  useEffect(() => {\r\n    if (movieId) {\r\n      getMovieDetails(movieId).then((data) => {\r\n        setMovie(data);\r\n      });\r\n    }\r\n  }, [movieId]);\r\n\r\n  if (!movie) {\r\n    return <div>NOT FOUND</div>;\r\n  } else {\r\n    return <MovieInfo movie={movie} />;\r\n  }\r\n};\r\nexport default MovieDetailsPage;\r\n","import axios from \"axios\";\r\nconst API_KEY = \"cebf74f2036e82ff6c32c96394fea389\";\r\nconst BASE_URL = `https://api.themoviedb.org/3`;\r\nconst page = 1;\r\n\r\nexport const getMovies = (query:string) => {\r\n  return axios\r\n    .get(\r\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\r\n    )\r\n    .then((response) => {\r\n      return response.data;\r\n    });\r\n};\r\n  \r\n  export const getMovieDetails = (movieId:string) => {\r\n    return axios\r\n      .get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  };\r\n  export const getTrendingMovies = () => {\r\n    return axios\r\n      .get(\r\n        `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&language=en-US&page=${page}`\r\n      )\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  };\r\n  export const getCast = (movieId:string) => {\r\n    return axios\r\n      .get(\r\n        `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\r\n      )\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  };\r\n  \r\n  export const getReviews = (movieId:string) => {\r\n    return axios\r\n      .get(\r\n        `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\r\n      )\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  };"],"names":["Button","styled","_templateObject","_taggedTemplateLiteral","MovieInformation","_templateObject2","Wrapper","_templateObject3","InfoWrapper","_templateObject4","_ref","movie","navigate","useNavigate","location","useLocation","year","release_date","substring","_jsxs","_Fragment","children","_jsx","type","onClick","_location$state$from","_location$state","state","from","src","concat","poster_path","alt","original_title","width","overview","genres","map","_ref2","id","name","NavLink","to","Outlet","_useState","useState","_useState2","_slicedToArray","setMovie","movieId","useParams","useEffect","getMovieDetails","then","data","MovieInfo","API_KEY","BASE_URL","getMovies","query","axios","response","getTrendingMovies","getCast","getReviews"],"sourceRoot":""}